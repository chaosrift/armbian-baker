name: "Build Artifacts Chunck"
description: "Common steps for a single artifacts chunk build"
author: diverger

inputs:
  desc:
    description: "Human readable description of the chunk"
    required: false
    default: ""
  invocation:
    description: "Matrix invocation string for compile.sh"
    required: true
  fdepth:
    description: "Checkout fetch-depth"
    required: false
    default: "0"
  armbian_build_sha1:
    description: "Pinned commit for build repository"
    required: true
  armbian_ver:
    description: "Armbian framework version/revision"
    required: true

outputs:
  logs_url:
    description: "Logs URL from compile.sh"
    value: ${{ steps.build.outputs.logs_url }}

runs:
  using: "composite"
  steps:
    # Free up disk space on GitHub-hosted runners (mirrors original workflow step)
    - name: Get more disk space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    # Login to ghcr.io, for later uploading rootfs to ghcr.io
    - name: Docker Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: "${{ github.actor }}"
        password: "${{ env.GHCR_TOKEN }}"

    # cleanup the place where we will clone the userpatches repo, to avoid git going insane and cleaning everything later
    - name: Cleanup userpatches repo
      if: ${{ ( env.USERPATCHES_REPOSITORY != '' ) && ( env.USERPATCHES_REF != '' ) }}
      shell: bash
      run: rm -rf userpatches.repo && rm -rf custom

    - name: Checkout build repo
      # We don't need to clone git, really. A wget would suffice for GH-hosted runners.
      # But using clone is better for Igor-hosted runners.
      uses: actions/checkout@v5
      with:
        repository: ${{ env.BUILD_REPOSITORY }}
        ref: ${{ inputs.armbian_build_sha1 }}
        token: ${{ env.GH_TOKEN }}
        fetch-depth: ${{ inputs.fdepth }}
        clean: false # true is default. it *will* delete the hosts /dev if mounted inside.
        path: build

    # clone the userpatches repo (`armbian/os`)
    - name: "Checkout userpatches repo: ${{env.USERPATCHES_REPOSITORY}}#${{env.USERPATCHES_REF}}"
      if: ${{ ( env.USERPATCHES_REPOSITORY != '' ) && ( env.USERPATCHES_REF != '' ) }}
      uses: actions/checkout@v5
      with:
        token: ${{ env.GH_TOKEN }}
        repository: ${{ env.USERPATCHES_REPOSITORY }}
        ref: ${{ env.USERPATCHES_REF }}
        fetch-depth: ${{ inputs.fdepth }}
        clean: false # true is default.
        path: userpatches.repo

    - name: "Checkout customizations"
      if: ${{ ( env.CUSTOM_REP != '' ) && ( env.CUSTOM_REF != '' ) }}
      uses: actions/checkout@v5
      with:
        repository: ${{ env.CUSTOM_REP }}
        token: ${{ env.GH_TOKEN }}
        ref: ${{ env.CUSTOM_REF }}
        fetch-depth: 0
        clean: false
        path: custom

    - name: "Put userpatches in place, and remove userpatches repo"
      if: ${{ ( env.USERPATCHES_REPOSITORY != '' ) && ( env.USERPATCHES_REF != '' ) }}
      shell: bash
      run: |
        mkdir -pv build/userpatches
        rsync -av userpatches.repo/${{env.USERPATCHES_DIR}}/. build/userpatches/
        rsync -av custom/userpatches/. build/userpatches/
        rm -rf userpatches.repo && rm -rf custom

    # Enable binfmt for building foreign architectures
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    # Build the chunk using Armbian's compile.sh
    - name: Build  ${{ inputs.desc }}
      id: build
      shell: bash
      run: |
        cd build
        bash ./compile.sh \
          OCI_TARGET_BASE="ghcr.io/${{ github.repository }}/" \
          IMAGE_SOURCE="${{ github.server_url }}/${{ github.repository }}" \
          GIT_TOKEN=${{ env.GH_TOKEN }} \
          GHCR_TOKEN=${{ env.GHCR_TOKEN }} \
          ${{ inputs.invocation }} REVISION="${{ inputs.armbian_ver }}" SHOW_DEBUG=yes SHARE_LOG=no ${{ env.EXTRA_PARAMS_ALL_BUILDS }}
