name: "Build One Image"
run-name: "Build One Image (${{ inputs.armbian_board }} / ${{ inputs.armbian_release }} / ${{ inputs.armbian_ui }})"

on:
  workflow_dispatch:
    inputs:
      armbian_target:
        type: choice
        description: 'Build target type (kernel = build only kernel, build = build complete image with kernel and rootfs)'
        required: false
        options:
        - kernel
        - build
        default: build

      armbian_kernel_branch:
        type: choice
        description: 'Kernel branch to use (vendor = manufacturer kernel, current = stable LTS kernel, edge = latest kernel)'
        options:
        - vendor
        - current
        - edge
        default: 'current'

      armbian_release:
        type: choice
        description: 'Base OS distribution (Ubuntu: noble/jammy/mantic, Debian: bookworm/trixie/sid)'
        options:
        - noble
        - jammy
        - mantic
        - bookworm
        - trixie
        - sid
        default: 'jammy'

      armbian_ui:
        type: choice
        description: 'Desktop environment or UI type (minimal = CLI only, server = basic server setup, others = desktop environments)'
        options:
        - minimal
        - server
        - xfce
        - gnome
        - cinnamon
        - i3-wm
        - kde-plasma
        default: 'minimal'

      armbian_version:
        description: 'Specific Armbian build framework version to use (leave empty to use default branch version)'
        required: false
        default: ''

      armbian_board:
        type: choice
        description: 'Board'
        options:
          - orangepi5-plus
          - handy-hpd5kx
          - handy-hpd5kx-aim7
        default: 'orangepi5-plus'

      release_tag:
        type: string
        description: 'Rlease tag'
        required: false
        default: '1.0.0'

env:
  BUILD_REPO_OWNER: diverger
  BUILD_REPO_NAME: armbian-build
  BUILD_REPO_BRANCH: armbian
  LOCAL_BUILD_ACTION_PATH: ./

jobs:
  build:
    if: ${{ github.repository_owner == 'diverger' }} && ${{ github.actor == 'diverger' }}
    runs-on: ubuntu-latest
    name: "Bake Armbian (${{ inputs.armbian_board }} / ${{ inputs.armbian_release }} / ${{ inputs.armbian_ui }})"

    steps:
      - name: Get more disk space
        uses: diverger/free-disk-space@diverger
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      # - name: Checkout board definitions
      #   uses: actions/checkout@v5
      #   with:
      #     repository: diverger/armbian-board
      #     token: ${{ secrets.GH_ACCESS_TOKEN }}
      #     ref: master
      #     clean: false

      # - name: Show folders in workspace
      #   run: ls -l

      - name: Checkout Armbian build framework locally
        uses: actions/checkout@v5
        with:
          repository: ${{ env.BUILD_REPO_OWNER }}/${{ env.BUILD_REPO_NAME }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          path: ${{ env.LOCAL_BUILD_ACTION_PATH }}
          ref: ${{ env.BUILD_REPO_BRANCH }}
          sparse-checkout: action.yml
          sparse-checkout-cone-mode: false
          clean: false

      # - name: Show folders in workspace
      #   run: ls -l

      # - name: Setup SSH key
      #   uses: webfactory/ssh-agent@v0.9.1
      #   with:
      #     ssh-private-key: |
      #       ${{ secrets.GIT_SSH_PRIVATE_KEY_UBOOT }}
      #       ${{ secrets.GIT_SSH_PRIVATE_KEY_KERNEL }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build local
        uses: ./
        with:
          armbian_target: ${{ inputs.armbian_target }}
          armbian_kernel_branch: ${{ inputs.armbian_kernel_branch }}
          armbian_release: ${{ inputs.armbian_release }}
          armbian_ui: ${{ inputs.armbian_ui }}
          armbian_version: ${{ inputs.armbian_version }}
          armbian_board: ${{ inputs.armbian_board }}
          armbian_token: ${{ secrets.GH_ACCESS_TOKEN }}
          armbian_pgp_key: ${{ secrets.GPG_KEY }}
          armbian_pgp_password: ${{ secrets.GPG_KEY_PASSPHRASE }}
          release_tag: ${{ inputs.release_tag }}
          oss_key_id: ${{ secrets.OSS_ACCESS_KEY }}
          oss_key_secret: ${{ secrets.OSS_SECRET_KEY }}
